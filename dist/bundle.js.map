{"version":3,"file":"bundle.js","sources":["webpack:///webpack/bootstrap 828aa3978e9b2c2d29d1","webpack:///./src/index.ts","webpack:///./src/main-menu.ts","webpack:///./src/base-level.ts"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 828aa3978e9b2c2d29d1\n **/","\"use strict\";\n/// <reference path=\"../typings/browser.d.ts\"/>\n/// <reference path=\"../public/lib/phaser.d.ts\"/>\nvar Phaser = require('phaser');\nvar main_menu_ts_1 = require('./main-menu.ts');\nvar base_level_ts_1 = require('./base-level.ts');\nvar game = new Phaser.Game(800, 600, Phaser.AUTO, 'game');\ngame.state.add('MainMenu', main_menu_ts_1.MainMenu, true);\ngame.state.add('Level', base_level_ts_1.BaseLevel, true);\ngame.state.start('MainMenu');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.ts\n ** module id = 1\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Phaser = require('phaser');\nvar MainMenu = (function (_super) {\n    __extends(MainMenu, _super);\n    function MainMenu() {\n        _super.call(this);\n        this.selected = 0;\n        this.style = { font: \"bold 32px Arial\", fill: \"#fff\", boundsAlignH: \"center\", boundsAlignV: \"middle\" };\n        this.levels = [\n            'Friday Night',\n            'TBA',\n            'TBA',\n            'TBA',\n            'TBA',\n        ];\n    }\n    MainMenu.prototype.preload = function () {\n    };\n    MainMenu.prototype.create = function () {\n        var _this = this;\n        this.game.stage.backgroundColor = '#337799';\n        var titleStyle = { font: \"bold 46px Arial\", fill: \"#d30\", boundsAlignH: \"center\", boundsAlignV: \"middle\" };\n        var title = this.game.add.text(0, 0, \"Dr. Phase!\", titleStyle);\n        title.setShadow(3, 3, 'rgba(0,0,0,0.5)', 2);\n        title.setTextBounds(0, 0, 800, 100);\n        this.bar = this.game.add.graphics();\n        for (var i = 0; i < this.levels.length; i++) {\n            this.drawText(this.levels[i], i);\n        }\n        ;\n        //Enable cursor keys so we can create some controls\n        this.cursors = this.game.input.keyboard.createCursorKeys();\n        this.game.input.onDown.add(function (event) {\n            var item = Math.floor((_this.game.input.y - 100) / 100);\n            if (item == 0) {\n                _this.game.state.start('Level', ['FridayNight']);\n            }\n            else {\n                console.log(\"Invalid level selected!\");\n            }\n        });\n    };\n    MainMenu.prototype.update = function () {\n        this.selected = Math.floor((this.game.input.y - 100) / 100);\n        if (this.selected < 0) {\n            this.selected = 0;\n        }\n        this.bar.clear();\n        this.bar.beginFill(0x000000, 0.2);\n        this.bar.drawRect(0, (100 * this.selected) + 100, 800, 100);\n    };\n    MainMenu.prototype.drawText = function (name, pos) {\n        //  The Text is positioned at 0, 100\n        var text = this.game.add.text(0, 0, name, this.style);\n        text.setShadow(3, 3, 'rgba(0,0,0,0.5)', 2);\n        //  We'll set the bounds to be from x0, y100 and be 800px wide by 100px high\n        var line = pos * 100 + 100;\n        text.setTextBounds(0, line, 800, 100);\n    };\n    return MainMenu;\n}(Phaser.State));\nexports.MainMenu = MainMenu;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main-menu.ts\n ** module id = 3\n ** module chunks = 0\n **/","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Phaser = require('phaser');\nvar BaseLevel = (function (_super) {\n    __extends(BaseLevel, _super);\n    function BaseLevel() {\n        _super.call(this);\n    }\n    BaseLevel.prototype.init = function () {\n    };\n    BaseLevel.prototype.preload = function () {\n        this.game.load.spritesheet('dude', 'assets/images/dude.png', 32, 48);\n        this.game.load.tilemap('tilemap', 'assets/friday_night.json', null, Phaser.Tilemap.TILED_JSON);\n        this.game.load.image('center_platform', 'assets/friday_night/center_platform.png');\n        this.game.load.image('right_platform', 'assets/friday_night/right_platform.png');\n        this.game.load.image('left_platform', 'assets/friday_night/left_platform.png');\n        this.game.load.image('floor', 'assets/friday_night/floor.png');\n    };\n    BaseLevel.prototype.create = function () {\n        //Start the Arcade Physics systems\n        this.game.physics.startSystem(Phaser.Physics.ARCADE);\n        //Change the background colour\n        this.game.stage.backgroundColor = \"#a9f0ff\";\n        //Add the tilemap and tileset image. The first parameter in addTilesetImage\n        //is the name you gave the tilesheet when importing it into Tiled, the second\n        //is the key to the asset in Phaser\n        this.map = this.game.add.tilemap('tilemap');\n        this.map.addTilesetImage('platforms', 'center_platform');\n        this.map.addTilesetImage('platforms', 'right_platform');\n        this.map.addTilesetImage('platforms', 'left_platform');\n        this.map.addTilesetImage('platforms', 'floor');\n        //Add both the background and ground layers. We won't be doing anything with the\n        //GroundLayer though\n        //this.backgroundLayer = this.map.createLayer('BackgroundLayer');\n        this.groundLayer = this.map.createLayer('platform');\n        //this.groundLayer.scale.set(0.9,0.9);\n        //Before you can use the collide function you need to set what tiles can collide\n        this.map.setCollisionBetween(1, 100, true, 'platform');\n        //Add the sprite to the game and enable arcade physics on it\n        this.sprite = this.game.add.sprite(10, 0, 'dude');\n        this.game.physics.arcade.enable(this.sprite);\n        //Change the world size to match the size of this layer\n        this.groundLayer.resizeWorld();\n        //Set some physics on the sprite\n        this.sprite.body.bounce.y = 0.2;\n        this.sprite.body.gravity.y = 2000;\n        this.sprite.body.gravity.x = 20;\n        //this.sprite.body.velocity.x = 100;\n        //Create a running animation for the sprite and play it\n        this.sprite.animations.add('right', [5, 6, 7, 8], 10, true);\n        this.sprite.animations.play('right');\n        //Make the camera follow the sprite\n        this.game.camera.follow(this.sprite);\n        //Enable cursor keys so we can create some controls\n        this.cursors = this.game.input.keyboard.createCursorKeys();\n    };\n    BaseLevel.prototype.update = function () {\n        //Make the sprite collide with the ground layer\n        //this.game.physics.arcade.collide(this.sprite, this.groundLayer);\n        //Make the sprite jump when the up key is pushed\n        if (this.cursors.up.isDown) {\n            this.sprite.body.velocity.y = -500;\n        }\n    };\n    return BaseLevel;\n}(Phaser.State));\nexports.BaseLevel = BaseLevel;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/base-level.ts\n ** module id = 4\n ** module chunks = 0\n **/"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;","sourceRoot":""}